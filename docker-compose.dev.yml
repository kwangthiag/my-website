services:
  frontend:
    build:
      context: ./client  # Build the frontend from local code
    volumes:
      - ./client/src:/app/src  # Mount local frontend source code
      - ./client/public:/app/public  # Mount public files
    ports:
      - "3000:3000"  # Run on port 3000 for local development
    environment:
      - CHOKIDAR_USEPOLLING=true  # Optional: for hot-reload in Docker
    networks:
      - mynetwork

  backend:
    build:
      context: ./server  # Build the backend from local code
    ports:
      - "5000:5000"  # Expose backend on port 5000
    depends_on:
      - db
    volumes:
      - ./server:/app  # Mount backend code for live reloading
      - ./server/uploads:/app/uploads  # Handle uploaded files
    env_file:
      - server/.env  # Load environment variables
    networks:
      - mynetwork

  db:
    image: postgres:13  # Use the official Postgres image
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: p@ssword
      POSTGRES_DB: blogdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - mynetwork

  nginx:
    image: nginx:latest  # Nginx service
    ports:
      - "80:80"  # Expose Nginx on port 80 (for frontend + API proxying)
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf  # Custom Nginx configuration
      - ./client/build:/usr/share/nginx/html  # Serve frontend static files from here
    depends_on:
      - frontend
      - backend
    networks:
      - mynetwork

volumes:
  pgdata:

networks:
  mynetwork:
    driver: bridge
