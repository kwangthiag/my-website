services:
  frontend:
    build:
      context: ./client  # Path to the frontend directory where the Dockerfile is located
      dockerfile: Dockerfile
    ports:
      - "3000:80"  # Map port 3000 on localhost to port 80 in the container (Nginx)
    networks:
      - mynetwork

  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"  # Maps your local port 5000 to the container's port 5000
    depends_on:
      - db  # Ensure db starts before backend
    env_file:
      - server/.env 
    volumes:
      - .:/app  # Mounts your app code to the container for development purposes
      - ./server/uploads:/app/server/uploads  # Mount the uploads directory as a volume
    networks:
      - mynetwork

  db:
    image: postgres:13  # Use the official PostgreSQL image
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: p@ssword
      POSTGRES_DB: blogdb
    ports:
      - "5432:5432"  # Map your local port 5432 to the container's port 5432
    volumes:
      - pgdata:/var/lib/postgresql/data  # Persist the database data
    networks:
      - mynetwork

volumes:
  pgdata:

networks:
  mynetwork:
